infile dictionary { 
*This program reads the 2008 SIPP Wave 11 Topical Module Data File
*by Jean Roth Fri May 31 13:25:27 EDT 2013

*Please report errors to jroth@nber.org
*See the .do file for directions and run with do sippp08putm11
*NOTE:  This program is distributed under the GNU GPL. 
*See end of this file and http://www.gnu.org/licenses/ for details.
*by Jean Roth Fri May 31 13:25:27 EDT 2013
*Please report errors to jroth@nber.org
*run with do sippp08putm11
*Change output file name/location as desired in the first line of the .dct file
*If you are using a PC, you may need to change the direction of the slashes, as in C:\
*  or "\\Nber\home\data\sipp\2008\sippp08putm11.dat"
* The following changes in variable names have been made, if necessary:
*      '$' to 'd';            '-' to '_';              '%' to 'p';
* Note:  Variable names in Stata are case-sensitive

_column(1   )   long ssuseq      %5f "SU: Sequence Number of Sample Unit - Primary"
_column(6   )  str12 ssuid      %12s "SU: Sample Unit Identifier"            
_column(18  )    int spanel      %4f "SU: Sample Code - Indicates Panel Year"
_column(22  )   byte swave       %2f "SU: Wave of data collection"           
_column(24  )   byte srotaton    %1f "SU: Rotation of data collection"       
_column(25  )   byte tfipsst     %2f "HH: FIPS State Code"                   
_column(27  )    int shhadid     %3f "SU: Hhld Address ID differentiates hhlds in"
_column(30  )    int eoutcome    %3f "HH: Interview Status code for this household"
_column(33  )    int rfid        %3f "FA: Family ID Number for this month"   
_column(36  )    int rfid2       %3f "FA: Family ID excluding related subfamily"
_column(39  )    int eppidx      %3f "PE: Person index"                      
_column(42  )   str3 eentaid     %3s "PE: Address ID of hhld where person entered"
_column(45  )   str4 epppnum     %4s "PE: Person number"                     
_column(49  )   byte epopstat    %1f "PE: Population status based on age in 4th"
_column(50  )   byte eppintvw    %2f "PE: Person's interview status"         
_column(52  )   byte eppmis4     %1f "PE: Person's 4th month interview status"
_column(53  )   byte esex        %1f "PE: Sex of this person"                
_column(54  )   byte erace       %1f "PE: The race(s) the respondent is"     
_column(55  )   byte eorigin     %2f "PE: Spanish, Hispanic or Latino"       
_column(57  ) double wpfinwgt %10.4f "WW: Person weight"                     
_column(67  )   byte errp        %2f "PE: Household relationship"            
_column(69  )   byte tage        %2f "PE: Age as of last birthday"           
_column(71  )   byte ems         %1f "PE: Marital status"                    
_column(72  )    int epnspous    %4f "PE: Person number of spouse"           
_column(76  )    int epnmom      %4f "PE: Person number of mother"           
_column(80  )    int epndad      %4f "PE: Person number of father"           
_column(84  )    int epnguard    %4f "PE: Person number of guardian"         
_column(88  )   byte rdesgpnt    %2f "PE: Designated parent or guardian flag"
_column(90  )   byte eeducate    %2f "ED: Highest Degree received or grade completed"
_column(92  )   str8 lgtkey      %8s "PE: Person longitudinal key"           
_column(100 )    int sinthhid    %3f "SU: Hhld Address ID of person in interview"
_column(103 )   byte earpunv     %2f "PR: Universe indicator."               
_column(105 )   byte rmjb        %2f "PR: Main job index"                    
_column(107 )   byte rmbs        %2f "PR: Main business index"               
_column(109 )   byte rmnjbbs     %2f "PR: Reference job or business for topical"
_column(111 )   byte eherempl    %2f "PR: Verification of number of employees"
_column(113 )   byte aherempl    %1f "PR: Allocation flag for EHEREMPL"      
_column(114 )   byte ttotempl    %2f "PR: Verification of number of employees"
_column(116 )   byte atotempl    %1f "PR: Allocation flag for TTOTEMPL"      
_column(117 )   byte tbustotl    %2f "PR: Verification of number of people"  
_column(119 )   byte abustotl    %1f "PR: Allocation flag for TBUSTOTL"      
_column(120 )   byte ewksyear    %2f "PR: Number of weeks worked annually"   
_column(122 )   byte awksyear    %1f "PR: Allocation flag for EWKSYEAR"      
_column(123 )   byte tnumlen     %2f "PR: Number of years/months respondent has"
_column(125 )   byte emthyear    %2f "PR: Units of reporting"                
_column(127 )   byte anumyear    %1f "PR: Allocation flag for ENUMLEN and EMTHYEAR"
_column(128 )   byte epensnyn    %2f "PR: Availability of pension or retirement"
_column(130 )   byte apensnyn    %1f "PR: Allocation flag for EPENSNYN"      
_column(131 )   byte eincpens    %2f "PR: Respondent's participation in pension"
_column(133 )   byte aincpens    %1f "PR: Allocation flag for EINCPENS"      
_column(134 )   byte enoina01    %2f "PR: Reason respondent not covered by pension"
_column(136 )   byte enoina02    %2f "PR: Reason respondent not covered by pension"
_column(138 )   byte enoina03    %2f "PR: Reason respondent not covered by pension"
_column(140 )   byte enoina04    %2f "PR: Reason respondent not covered by pension"
_column(142 )   byte enoina05    %2f "PR: Reason respondent not covered by pension"
_column(144 )   byte enoina06    %2f "PR: Reason respondent not covered by pension"
_column(146 )   byte enoina07    %2f "PR: Reason respondent not covered by pension"
_column(148 )   byte enoina08    %2f "PR: Reason respondent not covered by pension"
_column(150 )   byte enoina09    %2f "PR: Reason respondent not covered by pension"
_column(152 )   byte enoina10    %2f "PR: Reason respondent not covered by pension"
_column(154 )   byte enoina11    %2f "PR: Reason respondent not covered by pension"
_column(156 )   byte enoina12    %2f "PR: Reason respondent not covered by pension"
_column(158 )   byte enoina13    %2f "PR: Reason respondent not covered by pension"
_column(160 )   byte enoina14    %2f "PR: Reason respondent not covered by pension"
_column(162 )   byte anoina      %1f "PR: Allocation flag for ENOINA01-ENOINA14"
_column(163 )   byte etdeffen    %2f "PR: Asks if pension plan is like a 401(k)"
_column(165 )   byte atdeffen    %1f "PR: Allocation flag for ETDEFFEN"      
_column(166 )   byte emultpen    %2f "PR: Asks how many pension plans respondent has"
_column(168 )   byte amultpen    %1f "PR: Allocation flag for EMULTPEN"      
_column(169 )   byte e1pentyp    %2f "PR: Asks which type of pension plan"   
_column(171 )   byte a1pentyp    %1f "PR: Allocation flag for E1PENTYP"      
_column(172 )   byte e2pentyp    %2f "PR: Asks second type of pension plan"  
_column(174 )   byte a2pentyp    %1f "PR: Allocation flag for E2PENTYP"      
_column(175 )   byte e1penctr    %2f "PR: Asks if respondent contributes to pension"
_column(177 )   byte a1penctr    %1f "PR: Allocation flag for E1PENCTR"      
_column(178 )   byte e1taxdef    %2f "PR: Asks if contributions are tax-deferred"
_column(180 )   byte a1taxdef    %1f "PR: Allocation flag for E1TAXDEF"      
_column(181 )   byte e1recben    %2f "PR: Asks if respondent keeps retirement"
_column(183 )   byte a1recben    %1f "PR: Allocation flag for E1RECBEN"      
_column(184 )   byte e1lvlmps    %2f "PR: Asks if respondent can get lump-sum"
_column(186 )   byte a1lvlmps    %1f "PR: Allocation flag for E1LVLMPS"      
_column(187 )   byte t1yrsinc    %2f "PR: Asks number of years in the plan"  
_column(189 )   byte a1yrsinc    %1f "PR: Allocation flag for T1YRSINC"      
_column(190 )   byte e1ssofst    %2f "PR: Asks if benefits affected by social"
_column(192 )   byte a1ssofst    %1f "PR: Allocation flag for E1SSOFST"      
_column(193 )   long t1yrcont    %8f "PR: Asks amount contributed to plan last year"
_column(201 )   byte a1yrcont    %1f "PR: Allocation flag for T1YRCONT"      
_column(202 )   long t1totamt    %8f "PR: Asks plan balance at end of reference"
_column(210 )   byte a1totamt    %1f "PR: Allocation flag for T1TOTAMT"      
_column(211 )   byte e2penctr    %2f "PR: Asks if respondent contributes to second"
_column(213 )   byte a2penctr    %1f "PR: Allocation flag for E2PENCTR"      
_column(214 )   byte e2taxdef    %2f "PR: Asks if contributions are tax-deferred"
_column(216 )   byte a2taxdef    %1f "PR: Allocation flag for E2TAXDEF"      
_column(217 )   byte e2recben    %2f "PR: Asks if respondent keeps benefits" 
_column(219 )   byte a2recben    %1f "PR: Allocation flag for E2RECBEN"      
_column(220 )   byte e2lvlmps    %2f "PR: Asks if respondent can get lump-sum"
_column(222 )   byte a2lvlmps    %1f "PR: Allocation flag for E2LVLMPS"      
_column(223 )   byte t2yrsinc    %2f "PR: Asks number of years in second plan"
_column(225 )   byte a2yrsinc    %1f "PR: Allocation flag for T2YRSINC"      
_column(226 )   byte e2ssofst    %2f "PR: Asks if Soc. Sec. participation affects"
_column(228 )   byte a2ssofst    %2f "PR: Allocation flag for E2SSOFST"      
_column(230 )   long t2yrcont    %8f "PR: Asks amount contributed to second plan"
_column(238 )   byte a2yrcont    %1f "PR: Allocation flag for T2YRCONT"      
_column(239 )   long t2totamt    %8f "PR: Asks second plan balance"          
_column(247 )   byte a2totamt    %1f "PR: Allocation flag for T2TOTAMT"      
_column(248 )   byte e3taxdef    %2f "PR: Availability of tax-deferred retirement"
_column(250 )   byte a3taxdef    %1f "PR: Allocation flag for E3TAXDEF"      
_column(251 )   byte e3partic    %2f "PR: Participation in tax-deferred retirement"
_column(253 )   byte a3partic    %1f "PR: Allocation flag for E3PARTIC"      
_column(254 )   byte enoinb01    %2f "PR: Reason respondent not covered by pension"
_column(256 )   byte enoinb02    %2f "PR: Reason respondent not covered by pension"
_column(258 )   byte enoinb03    %2f "PR: Reason respondent not covered by pension"
_column(260 )   byte enoinb04    %2f "PR: Reason respondent not covered by pension"
_column(262 )   byte enoinb05    %2f "PR: Reason respondent not covered by pension"
_column(264 )   byte enoinb06    %2f "PR: Reason respondent not covered by pension"
_column(266 )   byte enoinb07    %2f "PR: Reason respondent is not covered"  
_column(268 )   byte enoinb08    %2f "PR: Reason respondent not covered by pension"
_column(270 )   byte enoinb09    %2f "PR: Reason respondent not covered by pension"
_column(272 )   byte enoinb10    %2f "PR: Reason respondent not covered by pension"
_column(274 )   byte enoinb11    %2f "PR: Reason respondent not covered by pension"
_column(276 )   byte enoinb12    %2f "PR: Reason respondent not covered by pension"
_column(278 )   byte enoinb13    %2f "PR: Reason respondent not covered by pension"
_column(280 )   byte enoinb14    %2f "PR: Reason respondent not covered by pension"
_column(282 )   byte anoinb      %1f "PR: Allocation flag for ENOINB01 - ENOINB14"
_column(283 )   byte ematchyn    %2f "PR: Contributions to the plan by employer"
_column(285 )   byte amatchyn    %1f "PR: Allocation flag for EMATCHYN"      
_column(286 )   byte efutpart    %2f "PR: Respondent expectation of future"  
_column(288 )   byte afutpart    %1f "PR: Allocation flag for EFUTPART"      
_column(289 )   long tslfcon1    %8f "PR: Amount of respondent's contributions"
_column(297 )   byte eslfcon2    %2f "PR: Frequency of contributions"        
_column(299 ) double eslfcon3  %4.2f "PR: Percent of salary contributed"     
_column(303 )   byte aslfcon3    %1f "PR: Allocation flag for ESLFCON3"      
_column(304 )   byte eempcont    %2f "PR: Asks if job/business contribute towards"
_column(306 )   byte aempcont    %1f "PR: Allocation flag for EEMPCONT"      
_column(307 )   byte econtdep    %2f "PR: Asks about linkage of contribution amounts"
_column(309 )   byte acontdep    %1f "PR: Allocation flag for ECONTDEP"      
_column(310 )   long tjbcont1    %8f "PR: Amount of job/business contributions to"
_column(318 )   byte ajbcont1    %1f "PR: Allocation flag for TJBCONT1"      
_column(319 )   byte ejbcont2    %2f "PR: Frequency of contributions"        
_column(321 )   byte ajbcont2    %1f "PR: Allocation flag for EJBCONT2"      
_column(322 ) double ejbcont3  %4.2f "PR: Percent of salary contibuted"      
_column(326 )   byte ajbcont3    %1f "PR: Allocation flag for EJBCONT3"      
_column(327 )   byte ejbcont4    %2f "PR: Other types of contributions"      
_column(329 )   byte einvchos    %2f "PR: Can respondent choose how money is"
_column(331 )   byte ainvchos    %1f "PR: Allocation flag for EINVCHOS"      
_column(332 )   byte einvsdec    %2f "PR: Can respondent choose how money is"
_column(334 )   byte ainvsdec    %1f "PR: Allocation flag for EINVSDEC"      
_column(335 )   byte ehowinv1    %2f "PR: Investment type selected for plan" 
_column(337 )   byte ehowinv2    %2f "PR: Investment type selected for plan" 
_column(339 )   byte ehowinv3    %2f "PR: Investment type selected for plan" 
_column(341 )   byte ehowinv4    %2f "PR: Investment type selected for plan" 
_column(343 )   byte ehowinv5    %2f "PR: Investment type selected for plan" 
_column(345 )   byte ehowinv6    %2f "PR: Investment type selected for plan" 
_column(347 )   byte ehowinv7    %2f "PR: Investment type selected for plan" 
_column(349 )   byte ehowinv8    %2f "PR: Investment type selected for plan" 
_column(351 )   byte ahowinvs    %1f "PR: Allocation flag for EHOWINV1 - EHOWINV8"
_column(352 )   byte emostinv    %2f "PR: Investment receiving largest share"
_column(354 )   byte amostinv    %1f "PR: Allocation flag for EMOSTINV"      
_column(355 )   long t3totamt    %8f "PR: Plan balance"                      
_column(363 )   byte a3totamt    %1f "PR: Allocation flag for T3TOTAMT"      
_column(364 )   byte epenloan    %2f "PR: Withdrawal of money from plan as loan"
_column(366 )   byte apenloan    %1f "PR: Allocation flag for EPENLOAN"      
_column(367 )   byte eletloan    %2f "PR: Does respondent's plan permit loan"
_column(369 )   byte aletloan    %1f "PR: Allocation flag for ELETLOAN"      
_column(370 )   long tloanbal    %8f "PR: Current balance due on loan"       
_column(378 )   byte aloanbal    %1f "PR: Allocation flag for TLOANBAL"      
_column(379 )   byte eothrpen    %2f "PR: Pension plan(s) with second job/business"
_column(381 )   byte aothrpen    %1f "PR: Allocation flag for EOTHRPEN"      
_column(382 )   byte eprevpen    %2f "PR: Pension plan(s) with previous job/business"
_column(384 )   byte aprevpen    %1f "PR: Allocation flag for EPREVPEN"      
_column(385 )   byte eprevexp    %2f "PR: Previous plans with benefits not yet"
_column(387 )   byte aprevexp    %1f "PR: Allocation flag for EPREVEXP"      
_column(388 )   byte tprevyrs    %2f "PR: Years worked before receiving pension"
_column(390 )   byte aprevyrs    %1f "PR: Allocation flag for TPREVYRS"      
_column(391 )    int ewhnleft    %4f "PR: Year respondent left previous job/business"
_column(395 )   byte awhnleft    %1f "PR: Allocation flag for EWHNLEFT"      
_column(396 )   byte eprevtyp    %2f "PR: How job's benefits are determined" 
_column(398 )   byte aprevtyp    %1f "PR: Allocation flag for EPREVTYP"      
_column(399 )   long tprevamt    %8f "PR: Balance in retirement/pension plan"
_column(407 )   byte aprevamt    %1f "PR: Allocation flag for TPREVAMT"      
_column(408 )   byte eprewith    %2f "PR: Withdrawal allowed from pension plan"
_column(410 )   byte aprewith    %1f "PR: Allocation flag for EPREWITH"      
_column(411 )   byte eprevlmp    %2f "PR: Recipiency of lump-sum from a plan"
_column(413 )   byte aprevlmp    %1f "PR: Allocation flag for EPREVLMP"      
_column(414 )   byte ewhyleft    %2f "PR: Reason for leaving previous job or"
_column(416 )   byte awhyleft    %1f "PR: Allocation flag for EWHYLEFT"      
_column(417 )   byte esurvlmp    %2f "PR: Recipiency of lump-sum survivor benefits"
_column(419 )   byte asurvlmp    %1f "PR: Allocation flag for ESURVLMP"      
_column(420 )   str2 elumpnum    %2s "PR: Number of lump-sum distributions received"
_column(422 )   str1 alumpnum    %1s "PR: Allocation flag for ELUMPNUM"      
_column(423 )    int elmpyear    %4f "PR: Year latest lump-sum or rollover was"
_column(427 )   byte almpyear    %1f "PR: Allocation flag for ELMPYEAR"      
_column(428 )   byte elumpn97    %2f "PR: Lump-sum payments for 2011"        
_column(430 )   byte alumpn97    %1f "PR: Allocation flag for ELUMPN97"      
_column(431 )   byte elumpsrc    %2f "PR: Source of lump-sum payment"        
_column(433 )   byte alumpsrc    %1f "PR: Allocation flag for ELUMPSRC"      
_column(434 )   byte elumphow    %2f "PR: Type of Lump-sum payment withdrawal"
_column(436 )   byte alumphow    %1f "PR: Allocation flag for ELUMPHOW"      
_column(437 )   long tlumptot    %8f "PR: Total amount of lump-sum payment"  
_column(445 )   byte alumptot    %1f "PR: Allocation flag for TLUMPTOT"      
_column(446 )   byte elumprec    %2f "PR: Lump-sum payment retained or rolled over"
_column(448 )   byte alumprec    %1f "PR: Allocation flag for ELUMPREC"      
_column(449 )   byte elmproll    %2f "PR: Lump-sum payment retained or rolled over"
_column(451 )   byte almproll    %1f "PR: Allocation flag for ELMPROLL"      
_column(452 )   byte elmpwher    %2f "PR: Type of plan used for rollover"    
_column(454 )   byte almpwher    %1f "PR: Allocation flag for ELMPWHER"      
_column(455 )   byte elumpent    %2f "PR: Rollover of all or part of lump-sum"
_column(457 )   byte alumpent    %1f "PR: Allocation flag for ELUMPENT"      
_column(458 )   byte elmpsp01    %2f "PR: Use of lump-sum payment"           
_column(460 )   byte elmpsp02    %2f "PR: Use of lump-sum payment"           
_column(462 )   byte elmpsp03    %2f "PR: Use of lump-sum payment"           
_column(464 )   byte elmpsp04    %2f "PR: Use of lump-sum payment"           
_column(466 )   byte elmpsp05    %2f "PR: Use of lump-sum payment"           
_column(468 )   byte elmpsp06    %2f "PR: Use of lump-sum payment"           
_column(470 )   byte elmpsp07    %2f "PR: Use of lump-sum payment"           
_column(472 )   byte elmpsp08    %2f "PR: Use of lump-sum payment"           
_column(474 )   byte elmpsp09    %2f "PR: Use of lump-sum payment"           
_column(476 )   byte elmpsp10    %2f "PR: Use of lump-sum payment"           
_column(478 )   byte elmpsp11    %2f "PR: Use of lump-sum payment"           
_column(480 )   byte elmpsp12    %2f "PR: Use of lump-sum payment"           
_column(482 )   byte elmpsp13    %2f "PR: Use of lump-sum payment"           
_column(484 )   byte elmpsp14    %2f "PR: Use of lump-sum payment"           
_column(486 )   byte elmpsp15    %2f "PR: Use of lump-sum payment"           
_column(488 )   byte elmpsp16    %2f "PR: Use of lump-sum payment"           
_column(490 )   byte elmpsp17    %2f "PR: Use of lump-sum payment"           
_column(492 )   byte elmpsp18    %2f "PR: Use of lump-sum payment"           
_column(494 )   byte elmpsp19    %2f "PR: Use of lump-sum payment"           
_column(496 )   byte almpsp      %1f "PR: Allocation flag for ELMPSP01-ELMPSP19"
_column(497 )   byte epenlng1    %2f "PR: For the rest of life payments"     
_column(499 )   byte epenlng2    %2f "PR: Limited number of payments"        
_column(501 )   byte epengng3    %2f "PR: Lump sum payments"                 
_column(503 )   byte apenlgth    %1f "PR: Allocation flag for EPENLNG1-EPENLNG2 and"
_column(504 )   byte epennumb    %2f "PR: Income received from more than one plan"
_column(506 )   byte apennumb    %1f "PR: Allocation flag for EPENNUMB"      
_column(507 )   byte epennums    %2f "PR: Number of plans producing income"  
_column(509 )   byte apennums    %1f "PR: Allocation flag for EPENNUMS"      
_column(510 )   byte epensrce    %2f "PR: Pension from own or former spouse's"
_column(512 )   byte apensrce    %1f "PR: Allocation flag for EPENSRCE"      
_column(513 )    int epenwhen    %4f "PR: Year when receipts from pension began"
_column(517 )   byte apenwhen    %1f "PR: Allocation flag for EPENWHEN"      
_column(518 )   byte epenbase    %2f "PR: Calculation method of pension amount"
_column(520 )   byte apenbase    %1f "PR: Allocation flag for EPENBASE"      
_column(521 )   byte epensurv    %2f "PR: Reduced benefits for survivor's option"
_column(523 )   byte apensurv    %1f "PR: Allocation flag for EPENSURV"      
_column(524 )   byte epenincr    %2f "PR: Has pension amount ever increased" 
_column(526 )   byte apenincr    %1f "PR: Allocation flag for EPENINCR"      
_column(527 )   byte epencola    %2f "PR: Cost-of-living adjustments"        
_column(529 )   byte apencola    %1f "PR: Allocation flag for EPENCOLA"      
_column(530 )   byte ependecr    %2f "PR: Increment in pension payment"      
_column(532 )   byte apendecr    %1f "PR: Allocation flag for EPENDECR"      
_column(533 )   long tpensamt    %8f "PR: Recode for current monthly pension amount"
_column(541 )   byte apensamt    %1f "PR: Allocation flag for TPENSAMT"      
_column(542 )   long tpenamt1    %9f "PR: Initial monthly pension payment amount"
_column(551 )   byte apenamt1    %1f "PR: Allocation flag for TPENAMT1"      
_column(552 )   byte elmpsrce    %2f "PR: Source of most recent lump-sum payment"
_column(554 )   byte almpsrce    %1f "PR: Allocation flag for ELMPSRCE"      
_column(555 )   byte ejobreti    %2f "PR: Retired from a job or business"    
_column(557 )   byte ajobreti    %1f "PR: Allocation flag for EJOBRETI"      
_column(558 )   byte ewrk5yrs    %2f "PR: Worked for five years or more"     
_column(560 )   byte awrk5yrs    %1f "PR: Allocation flag for EWRK5YRS"      
_column(561 )   byte escrepen    %2f "PR: Retirement benefits from job or business"
_column(563 )   byte ascrepen    %1f "PR: Allocation flag for ESCREPEN"      
_column(564 )    int ejbindrp    %4f "PR: Job industry code"                 
_column(568 )   byte ajbindrp    %1f "PR: Allocation flag for EJBINDRP"      
_column(569 )    int tjboccrp    %4f "PR: Job occupational code"             
_column(573 )   byte ajboccrp    %1f "PR: Allocation flag for TJBOCCRP"      
_column(574 )   byte rclwrkr     %2f "PR: Class of worker recode"            
_column(576 )   byte aclwrkr     %1f "PR: Allocation flag for Class of worker"
_column(577 )   byte emultloc    %2f "PR: Number of employer's locations"    
_column(579 )   byte amultloc    %1f "PR: Allocation flag for EMULTLOC"      
_column(580 )   byte enumwork    %2f "PR: Number of employees"               
_column(582 )   byte anumwork    %1f "PR: Allocation flag for ENUMWORK"      
_column(583 )   byte eemplall    %2f "PR: Number of employees at all locations"
_column(585 )   byte aemplall    %1f "PR: Allocation flag for EEMPLALL"      
_column(586 )   byte eunionyn    %2f "PR: Union/employee association contract"
_column(588 )   byte aunionyn    %1f "PR: Allocation flag for EUNIONYN"      
_column(589 )    int thrsweek    %3f "PR: Hours per week at past job"        
_column(592 )   byte ahrsweek    %1f "PR: Allocation flag for THRSWEEK"      
_column(593 )   byte ewksyrs     %2f "PR: Weeks per year at past job"        
_column(595 )   byte awksyrs     %1f "PR: Allocation flag for EWKSYRS"       
_column(596 )   byte tyrswrkd    %2f "PR: Total years worked at past job"    
_column(598 )   byte ayrswrkd    %1f "PR: Allocation flag for TYRSWRKD"      
_column(599 )    int eyrlrftj    %4f "PR: Year left past job"                
_column(603 )   byte ayrlrftj    %1f "PR: Allocation flag for EYRLRFTJ"      
_column(604 )   long ternlev1    %8f "PR: Amount of pre-tax earnings at past job"
_column(612 )   byte eernlev2    %2f "PR: Frequency of earnings at past job" 
_column(614 )   byte aernleav    %1f "PR: Allocation flag for TERNLEV1-EERNLEV2"
_column(615 )   byte ehlthpln    %2f "PR: Current health plan from former employer"
_column(617 )   byte ahlthpln    %1f "PR: Allocation flag for EHLTHPLN"      
_column(618 )   byte tbsindrp    %2f "PR: Business industry code"            
_column(620 )   byte absindrp    %1f "PR: Allocation flag for TBSINDRP"      
_column(621 )    int ebsoccrp    %4f "PR: Business occupational code"        
_column(625 )   byte absoccrp    %1f "PR: Allocation flag for EBSOCCRP"      
_column(626 )   byte tmakempl    %2f "PR: Maximum number of employees"       
_column(628 )   byte amakempl    %1f "PR: Allocation flag for TMAKEMPL"      
_column(629 )   byte ebusninc    %2f "PR: Was respondent's business incorporated"
_column(631 )   byte abusninc    %1f "PR: Allocation flag for EBUSNINC"      
_column(632 )    int tbushrsw    %3f "PR: Number of hours per week"          
_column(635 )   byte abushrsw    %1f "PR: Allocation flag for TBUSHRSW"      
_column(636 )   byte ebuswksy    %2f "PR: Number of weeks per year"          
_column(638 )   byte abuswksy    %1f "PR: Allocation flag for EBUSWKSY"      
_column(639 )   byte tbuslong    %2f "PR: Number of years"                   
_column(641 )   byte abuslong    %1f "PR: Allocation flag for TBUSLONG"      
_column(642 )    int ebusleav    %4f "PR: Year respondent left own business" 
_column(646 )   byte abusleav    %1f "PR: Allocation flag for EBUSLEAV"      
_column(647 )   long tbusern1    %8f "PR: Pre-tax earnings at past business" 
_column(655 )   byte ebusern2    %2f "PR: Frequency of earnings"             
_column(657 )   byte abusern     %1f "PR: Allocation flag for TBUSERN1-EBUSERN2"
_column(658 )   byte ebushlth    %2f "PR: Present health plan by former business"
_column(660 )   byte abushlth    %1f "PR: Allocation flag for EBUSHLTH"      
_column(661 )   byte estdlvng    %2f "PR: Standard of living query"          
_column(663 )   byte astdlvng    %1f "PR: Allocation flag for ESTDLVNG"      
_column(664 )   byte rtmeeno     %2f "PR: Main job number"                   
_column(666 )   byte rtmebno     %2f "PR: Main business number"              

}

** Copyright 2013 shared by the National Bureau of Economic Research and Jean Roth ;

** National Bureau of Economic Research. ;
** 1050 Massachusetts Avenue ;
** Cambridge, MA 02138 ;
** jroth@nber.org ;

** This program and all programs referenced in it are free software. You ;
** can redistribute the program or modify it under the terms of the GNU ;
** General Public License as published by the Free Software Foundation; 
** either version 2 of the License, or (at your option) any later version. ;

** This program is distributed in the hope that it will be useful, ;
** but WITHOUT ANY WARRANTY, without even the implied warranty of ;
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the ;
** GNU General Public License for more details. ;

** You should have received a copy of the GNU General Public License ;
** along with this program, if not, write to the Free Software ;
** Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA. ;
